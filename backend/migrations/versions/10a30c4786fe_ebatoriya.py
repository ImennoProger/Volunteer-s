"""ebatoriya

Revision ID: 10a30c4786fe
Revises: e856b3e89f19
Create Date: 2024-07-25 16:26:12.282634

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '10a30c4786fe'
down_revision: Union[str, None] = 'e856b3e89f19'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint(None, 'category', ['category_id'])
    op.create_unique_constraint(None, 'city', ['city_id'])
    op.create_unique_constraint(None, 'country', ['country_id'])
    op.create_unique_constraint(None, 'event', ['event_id'])
    op.create_unique_constraint(None, 'event_registration', ['registration_id'])
    op.create_unique_constraint(None, 'permission', ['permission_id'])
    op.create_unique_constraint(None, 'role', ['role_id'])
    op.create_unique_constraint(None, 'rolepermission', ['rolepermissions_id'])
    op.add_column('user_metadata', sa.Column('isActive', sa.Boolean(), nullable=True))
    op.create_unique_constraint(None, 'user_permission', ['user_permission_id'])
    op.create_unique_constraint(None, 'user_role', ['user_role_id'])
    op.create_unique_constraint(None, 'user_volunteer_org', ['user_volunteer_org_id'])
    op.create_unique_constraint(None, 'volunteer_org', ['vol_id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'volunteer_org', type_='unique')
    op.drop_constraint(None, 'user_volunteer_org', type_='unique')
    op.drop_constraint(None, 'user_role', type_='unique')
    op.drop_constraint(None, 'user_permission', type_='unique')
    op.drop_column('user_metadata', 'isActive')
    op.drop_constraint(None, 'rolepermission', type_='unique')
    op.drop_constraint(None, 'role', type_='unique')
    op.drop_constraint(None, 'permission', type_='unique')
    op.drop_constraint(None, 'event_registration', type_='unique')
    op.drop_constraint(None, 'event', type_='unique')
    op.drop_constraint(None, 'country', type_='unique')
    op.drop_constraint(None, 'city', type_='unique')
    op.drop_constraint(None, 'category', type_='unique')
    # ### end Alembic commands ###
